# -*- makefile -*-
PORT=8888

alltests: CH CP UA DJ
.PHONY: tests
tests: alltests

CH: centos-httpd.dockerfile
centos-httpd.dockerfile:
	docker build . -f tests/$@ --tag localhost:5000/tests:$@
	- docker rm --force $@
	docker run -d -p $(PORT):80 --name $@ localhost:5000/tests:$@
	- test -d tmp || mkdir tmp 
	sleep 5; wget -O tmp/$@.txt http://127.0.0.1:$(PORT)
	grep OK tmp/$@.txt
	docker stop $@
	docker rm --force $@

CP: centos-postgres.dockerfile
centos-postgres.dockerfile:
	docker build . -f tests/$@ --tag localhost:5000/tests:$@
	- docker rm --force $@
	docker run -d -p $(PORT):5432 --name $@ localhost:5000/tests:$@
	- test -d tmp || mkdir tmp 
	sleep 5; export PGUSER=testuser_11; export PGPASSWORD=Testuser.11 \
	; psql -p $(PORT) -h 127.0.0.1 -d postgres \
	       -c "SELECT rolname FROM pg_roles" > tmp/$@.txt
	grep testuser_ok tmp/$@.txt
	docker stop $@
	docker rm --force $@

CL: centos-lamp.dockerfile
centos-lamp.dockerfile:
	docker build . -f tests/$@ --tag localhost:5000/tests:$@
	- docker rm --force $@
	docker run -d -p $(PORT):80 --name $@ localhost:5000/tests:$@
	- test -d tmp || mkdir tmp 
	sleep 5; wget -O tmp/$@.txt http://127.0.0.1:$(PORT)/phpMyAdmin
	grep "<h1>.*>phpMyAdmin<" tmp/$@.txt
	docker stop $@
	docker rm --force $@


OL: opensuse-lamp.dockerfile
opensuse-lamp.dockerfile:
	docker build . -f tests/$@ --tag localhost:5000/tests:$@
	- docker rm --force $@
	docker run -d -p $(PORT):80 --name $@ localhost:5000/tests:$@
	- test -d tmp || mkdir tmp 
	sleep 5; wget -O tmp/$@.txt http://127.0.0.1:$(PORT)/phpMyAdmin
	grep "<h1>.*>phpMyAdmin<" tmp/$@.txt
	docker stop $@
	docker rm --force $@


UA: ubuntu-apache2.dockerfile
ubuntu-apache2.dockerfile:
	docker build . -f tests/$@ --tag localhost:5000/tests:$@
	- docker rm --force $@
	docker run -d -p $(PORT):80 --name $@ localhost:5000/tests:$@
	- test -d tmp || mkdir tmp 
	sleep 25; wget -O tmp/$@.txt http://127.0.0.1:$(PORT)
	grep OK tmp/$@.txt
	docker stop $@
	docker rm --force $@

# FIXME: "-p testing_systemctl" makes containers like "testingsystemctl_<service>_1" ?!
DJ: docker-jenkins
docker-jenkins:
	$(MAKE) docker-jenkins.1 # download the software (will be done just once)
	$(MAKE) docker-jenkins.2 # bring up the build-step deployment containers
	$(MAKE) docker-jenkins.3 # run the build-playbook (using ansible roles)
	$(MAKE) docker-jenkins.4 # save the build-step containers as images
	$(MAKE) docker-jenkins.5 # use the new images for start-step containers
	$(MAKE) docker-jenkins.6 # unlock jenkins as a post-build config-example
	$(MAKE) docker-jenkins.7 # check jenkins runs unlocked as a testcase result
docker-jenkins.1:
	cd tests && ansible-playbook download-jenkins.yml -vv
	cd tests && ansible-playbook download-selenium.yml -vv
	cd tests && ansible-playbook download-firefox.yml -vv
docker-jenkins.2:
	docker-compose -p testingsystemctl1 -f tests/docker-build-compose.yml down || true
	docker-compose -p testingsystemctl1 -f tests/docker-build-compose.yml up -d || \
	docker-compose -p testingsystemctl1 -f tests/docker-build-compose.yml up -d
docker-jenkins.3:
	test -d tests/files || mkdir tests/files 
	cd tests/files && ln -sf ../../files/docker .
	docker exec testingsystemctl1_serversystem_1 bash -c 'touch /var/log/systemctl.log'
	docker exec testingsystemctl1_virtualdesktop_1 bash -c 'touch /var/log/systemctl.log'
	: ........ ready to run the deployment playbook
	ansible-playbook -i tests/docker-build-compose.ini \
	       -e LOCAL=yes tests/docker-build-playbook.yml -vv \
	       -e jenkins_prefix=/buildserver
	rm tests/files/docker
docker-jenkins.4:
	ansible-playbook -i tests/docker-build-compose.ini \
	       -e LOCAL=yes tests/docker-build-stop.yml -vv
	docker commit -c "CMD '/usr/bin/systemctl'" -m "`date '+%Y-%m-%d %H:%M'`" \
	   testingsystemctl1_serversystem_1 "localhost:5000/testingsystemctl:serversystem"
	docker commit -c "CMD '/usr/bin/systemctl'" -m "`date '+%Y-%m-%d %H:%M'`" \
	   testingsystemctl1_virtualdesktop_1 "localhost:5000/testingsystemctl:virtualdesktop"
docker-jenkins.5:
	docker-compose -p testingsystemctl1 -f tests/docker-build-compose.yml down || true
	docker-compose -p testingsystemctl2 -f tests/docker-start-compose.yml down || true
	docker-compose -p testingsystemctl2 -f tests/docker-start-compose.yml up -d || \
	docker-compose -p testingsystemctl2 -f tests/docker-start-compose.yml up -d
docker-jenkins.6:
	- rm tests/*.png
	ansible-playbook -i tests/docker-start-compose.ini \
	       -e LOCAL=yes tests/docker-start-playbook.yml -vv \
	       -e j_username=installs -e j_password=installs.11 \
	       -e j_url=http://serversystem:8080/buildserver
	ls -l tests/*.png
DJ..: docker-jenkins.7
docker-jenkins.7:
	test -d tmp || mkdir tmp
	wget -O tmp/docker-jenkins.html http://localhost:8080/buildserver/manage \
	   --user installs --password installs.11 --auth-no-challenge
	grep "Manage Nodes" tmp/docker-jenkins.html
	sleep 4
	docker-compose -p testingsystemctl2 -f tests/docker-start-compose.yml down || true 
